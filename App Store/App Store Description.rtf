{\rtf1\ansi\ansicpg1252\cocoartf2577
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red24\green25\blue27;
\red24\green25\blue27;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000\c0;\cssrgb\c12570\c12963\c14125;
\cssrgb\c12570\c12963\c14125;}
\paperw11900\paperh16840\margl1440\margr1440\vieww21560\viewh18200\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs60 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 CPU Simulator is intended for students studying A-Level AQA Computer Science, who need to understand certain information on how a\'a0computer\'92s CPU functions. Specifically, the fetch-decode-execute cycle and how components of the processor change at each stage\'a0\'96\'a0depending on the code being run.\
\
An interactive interface shows the components of the CPU, their contents, a description of what has changed in one clock cycle, an IDE to develop assembly code, an interface to view corresponding machine code, an interface to change preferences and more.\
\
Components you can track:\
\pard\pardeftab720\partightenfactor0
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'95 Address Bus\
\pard\pardeftab720\partightenfactor0
\cf4 \'95 Data Bus\
\'95 Clock\
\'95 Program Counter (PC)\
\'95 Current Instruction Register (CIR)\
\'95 Memory Address Register (MAR)\
\'95 Memory Buffer Register (MBR)\
\'95 128 General Purpose Registers\
\'95 Arithmetic Logic Unit (ALU)\
\'95 Status Register\
\'95 128 Data Memory Locations\
\'95 Instruction Memory\
\
Options you can change:\
\pard\pardeftab720\partightenfactor0
\cf5 \'95 Run Speed (including stepped mode)\
\'95 Number Base\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \
This is a document-based application which means that you can create and run an unlimited number of unique simulations, save and share them.\
\
This app is primarily intended to help\'a0teach \'914.7.3.2 The Fetch-Execute cycle and the role of registers within it\'92\'a0of the AQA A-Level specification, using the\'a0Harvard Architecture.\
}